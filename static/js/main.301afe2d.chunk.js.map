{"version":3,"sources":["fbase.js","routes/Home.js","routes/Auth.js","routes/CreateTimeTable.js","rolling.gif","routes/NotFound.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storage","Auth","useState","newAccount","setNewAccount","email","setEmail","name","setName","password","setPassword","passwordChk","setPasswordChk","roleRadio","setRoleRadio","grade","setGrade","classNo","setClassNo","error","setError","setDefaultPersistence","a","setPersistence","Persistence","SESSION","catch","err","console","log","useEffect","onChange","event","target","value","errorTransfer","errorMessage","code","onSubmit","preventDefault","createUserWithEmailAndPassword","user","currentUser","userObject","uid","role","registeredAt","Date","collection","doc","set","updateProfile","displayName","then","window","location","reload","signInWithEmailAndPassword","onPersistenceClick","checked","LOCAL","toggleRegister","prev","onFindPasswordClick","prompt","sendPasswordResetEmail","alert","className","type","placeholder","required","onInput","htmlFor","id","onClick","defaultChecked","CreateTimeTable","userObj","border","List","i","j","push","Home","init","setInit","sent","setSent","setNowtime","sendEmail","emailVerified","sendEmailVerification","now","getFullYear","String","getMonth","length","getDate","src","rolling","width","NotFound","Profile","history","useHistory","onLogOutClick","signOut","Navigation","to","AppRouter","isLoggedIn","exact","path","App","setUserObj","setIsLoggedIn","onAuthStateChanged","userRef","get","exists","userData","data","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.301afe2d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"styles/Home.css\";\r\nimport rolling from \"rolling.gif\";\r\nimport CreateTimeTable from \"./CreateTimeTable\";\r\n\r\nconst List = [];\r\nfor (var i = 1; i <= 3; i++) {\r\n  for (var j = 1; j <= 5; j++) {\r\n    List.push(`${i}학년 ${j}반`);\r\n  }\r\n}\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [init, setInit] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [nowTime, setNowtime] = useState(\"\");\r\n  const [students, setStudents] = useState([]);\r\n  const sendEmail = async () => {\r\n    if (authService.currentUser && !authService.currentUser.emailVerified) {\r\n      await authService.currentUser\r\n        .sendEmailVerification()\r\n        .then(() => {\r\n          alert(\"인증 메일을 보냈습니다. 메일함을 확인해주세요!\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(\"이메일 보내기에 실패했습니다... 나중에 다시 시도해주세요.\");\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInit(true);\r\n    console.log(userObj);\r\n  }, []);\r\n\r\n  const onEmailVerify = () => {\r\n    if (!sent) {\r\n      sendEmail();\r\n      setSent(true);\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const onCreateTimeTableClick = () => {\r\n    const now = new Date();\r\n    setNowtime(\r\n      `${now.getFullYear()}${\r\n        String(now.getMonth() + 1).length == 1\r\n          ? `0${String(now.getMonth() + 1)}`\r\n          : String(now.getMonth() + 1)\r\n      }${\r\n        String(now.getDate()).length == 1\r\n          ? `0${String(now.getDate())}`\r\n          : String(now.getDate())\r\n      }`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <>\r\n          {userObj.emailVerified ? (\r\n            <div>\r\n              <h1>Home</h1>\r\n              <p>{userObj.displayName}님 안녕하세요!</p>\r\n              <CreateTimeTable />\r\n              <br />\r\n              <br />\r\n              <button onClick={onCreateTimeTableClick}>\r\n                오늘 시간표 추가하기\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h3 className=\"verify_warning\">\r\n                <strong>{userObj.displayName}</strong>선생님!\r\n                <br />\r\n                <br />\r\n                이메일 인증 후 이용하실 수 있습니다\r\n              </h3>\r\n              <button onClick={onEmailVerify} className=\"verify_btn\">\r\n                {sent ? \"이메일 인증 후 눌러주세요!\" : \"인증 이메일 보내기\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"loading_div\">\r\n          <img src={rolling} className=\"loading\" width=\"50px\" />\r\n          <br />\r\n          <p>잠시만 기다려주세요...</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService, firebaseInstance } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"styles/Auth.css\";\r\nimport \"styles/bootstrap.min.css\";\r\n\r\nconst Auth = () => {\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordChk, setPasswordChk] = useState(\"\");\r\n  const [roleRadio, setRoleRadio] = useState(\"담임\");\r\n  const [grade, setGrade] = useState(\"\");\r\n  const [classNo, setClassNo] = useState(\"\");\r\n  //   const [subject, setSubject] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const setDefaultPersistence = async () => {\r\n    await authService\r\n      .setPersistence(firebaseInstance.auth.Auth.Persistence.SESSION)\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDefaultPersistence();\r\n  }, []);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"passwordChk\") {\r\n      setPasswordChk(value);\r\n    } else if (name === \"name\") {\r\n      setName(value);\r\n    } else if (name === \"roleRadio\") {\r\n      setRoleRadio(value);\r\n    } else if (name === \"grade\") {\r\n      setGrade(value);\r\n    } else if (name === \"class\") {\r\n      setClassNo(value);\r\n    }\r\n    // else if (name === \"subject\") {\r\n    //   setSubject(value);\r\n    // }\r\n  };\r\n\r\n  const errorTransfer = (err) => {\r\n    let errorMessage;\r\n    switch (err.code) {\r\n      case \"auth/user-not-found\":\r\n        errorMessage = \"존재하지 않는 계정입니다.\";\r\n        break;\r\n      case \"auth/email-already-in-use\":\r\n        errorMessage = \"해당 이메일은 이미 사용중입니다.\";\r\n        break;\r\n      case \"auth/wrong-password\":\r\n        errorMessage = \"비밀번호가 틀렸습니다.\";\r\n        break;\r\n      case \"auth/too-many-requests\":\r\n        errorMessage =\r\n          \"너무 많은 요청이 발생했습니다. 나중에 다시 시도해주십시오.\";\r\n        break;\r\n      case \"auth/weak-password\":\r\n        errorMessage = \"비밀번호의 최소 길이는 6자리 입니다.\";\r\n        break;\r\n      default:\r\n        errorMessage = `알 수 없는 에러가 발생했습니다. 에러코드 ${err.code}`;\r\n        break;\r\n    }\r\n    setError(errorMessage);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (newAccount) {\r\n      if (password !== passwordChk) {\r\n        setError(\"비밀번호가 일치하지 않습니다\");\r\n        return;\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n    }\r\n    try {\r\n      if (newAccount) {\r\n        let userObject;\r\n        await authService\r\n          .createUserWithEmailAndPassword(email, password)\r\n          .catch((err) => {\r\n            console.log(err);\r\n            throw err;\r\n          });\r\n        const user = authService.currentUser;\r\n        if (roleRadio === \"담임\") {\r\n          userObject = {\r\n            uid: user.uid,\r\n            name,\r\n            email,\r\n            grade,\r\n            classNo,\r\n            role: roleRadio + \"선생님\",\r\n            registeredAt: new Date(),\r\n          };\r\n        } else {\r\n          userObject = {\r\n            uid: user.uid,\r\n            name,\r\n            email,\r\n            role: roleRadio + \"선생님\",\r\n            registeredAt: new Date(),\r\n          };\r\n        }\r\n        await dbService\r\n          .collection(\"teacher\")\r\n          .doc(userObject.uid)\r\n          .set(userObject);\r\n        await authService.currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            window.location.reload();\r\n          });\r\n      } else {\r\n        await authService\r\n          .signInWithEmailAndPassword(email, password)\r\n          .catch((err) => {\r\n            console.log(err);\r\n            throw err;\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      errorTransfer(error);\r\n    }\r\n  };\r\n\r\n  const onPersistenceClick = async (event) => {\r\n    const {\r\n      target: { checked },\r\n    } = event;\r\n    if (checked) {\r\n      await authService.setPersistence(\r\n        firebaseInstance.auth.Auth.Persistence.LOCAL\r\n      );\r\n    } else {\r\n      await authService.setPersistence(\r\n        firebaseInstance.auth.Auth.Persistence.SESSION\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggleRegister = () =>\r\n    setNewAccount((prev) => {\r\n      setError(\"\");\r\n      return !prev;\r\n    });\r\n\r\n  const onFindPasswordClick = async () => {\r\n    const email = prompt(\"비밀번호를 재설정할 이메일을 입력해주세요.\");\r\n    await authService\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        alert(\"비밀번호 재설정 이메일을 보냈습니다! 메일함에서 확인해주세요.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\r\n          \"계정에 등록되지 않은 이메일이거나, 이메일을 보내는 중에 문제가 발생했습니다.\\n관리자에게 문의하세요.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit}>\r\n        {newAccount ? (\r\n          <div className=\"input_form\">\r\n            <h1 className=\"title\">회원가입</h1>\r\n            <p className=\"description\">\r\n              삼척고등학교 출석체크 서비스를 이용하려면 로그인이 필요합니다.\r\n            </p>\r\n            <input\r\n              className=\"input_box\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              placeholder=\"이름\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"input_box\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"이메일\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"input_box\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"비밀번호\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"input_box\"\r\n              name=\"passwordChk\"\r\n              type=\"password\"\r\n              value={passwordChk}\r\n              placeholder=\"비밀번호 재입력\"\r\n              onInput={onChange}\r\n              required\r\n            />\r\n            <br />\r\n            {roleRadio === \"담임\" ? (\r\n              <>\r\n                <input\r\n                  className=\"input_box\"\r\n                  name=\"grade\"\r\n                  type=\"number\"\r\n                  value={grade}\r\n                  onChange={onChange}\r\n                  placeholder=\"학년\"\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"input_box\"\r\n                  name=\"class\"\r\n                  type=\"number\"\r\n                  value={classNo}\r\n                  onChange={onChange}\r\n                  placeholder=\"반\"\r\n                  required\r\n                />\r\n                <br />\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <label htmlFor=\"roleRadio1\" className=\"role_radio\">\r\n              <input\r\n                id=\"roleRadio1\"\r\n                name=\"roleRadio\"\r\n                type=\"radio\"\r\n                value=\"담임\"\r\n                onClick={onChange}\r\n                required\r\n                defaultChecked={true}\r\n              />\r\n              <span className=\"caption\">담임선생님</span>\r\n            </label>\r\n            <label htmlFor=\"roleRadio2\" className=\"role_radio\">\r\n              <input\r\n                id=\"roleRadio2\"\r\n                name=\"roleRadio\"\r\n                type=\"radio\"\r\n                value=\"교과\"\r\n                onClick={onChange}\r\n                required\r\n              />\r\n              <span className=\"caption\">교과선생님</span>\r\n            </label>\r\n            <label htmlFor=\"persistence\" className=\"persistence\">\r\n              <input\r\n                id=\"persistence\"\r\n                type=\"checkbox\"\r\n                onClick={onPersistenceClick}\r\n              />{\" \"}\r\n              로그인 상태 유지\r\n            </label>\r\n            <br />\r\n            <p className=\"error\">{error}</p>\r\n            <input type=\"submit\" value=\"회원가입\" className=\"submit_btn\" />\r\n            <br />\r\n            <span onClick={toggleRegister} className=\"toggle_btn\">\r\n              계정이 있다면? <strong>로그인</strong>\r\n            </span>\r\n            <br />\r\n          </div>\r\n        ) : (\r\n          <div className=\"input_form\">\r\n            <h1 className=\"title\">로그인</h1>\r\n            <p className=\"description\">\r\n              삼척고등학교 출석체크 서비스를 이용하려면 로그인이 필요합니다.\r\n            </p>\r\n            <input\r\n              className=\"input_box\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"이메일을 입력하세요\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"input_box\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"비밀번호를 입력하세요\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <label htmlFor=\"persistence\" className=\"persistence\">\r\n              <input\r\n                id=\"persistence\"\r\n                type=\"checkbox\"\r\n                onClick={onPersistenceClick}\r\n              />{\" \"}\r\n              로그인 상태 유지\r\n            </label>\r\n            <span onClick={onFindPasswordClick} className=\"forgot_password\">\r\n              비밀번호 찾기\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <p className=\"error\">{error}</p>\r\n            <input type=\"submit\" value=\"로그인\" className=\"submit_btn\" />\r\n            <br />\r\n            <br />\r\n            <span onClick={toggleRegister} className=\"toggle_btn\">\r\n              계정이 없으신가요? <strong>회원가입</strong>\r\n            </span>\r\n          </div>\r\n        )}\r\n        <br />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport \"styles/CreateTimeTable.css\";\r\n\r\nconst CreateTimeTable = ({ userObj }) => {\r\n  return (\r\n    <div className=\"class_table\">\r\n      <table border=\"1\">\r\n        <tbody>\r\n          <tr>\r\n            <td>1교시</td>\r\n            <td>\r\n              <input type=\"text\" className=\"class_time\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>2교시</td>\r\n            <td>\r\n              <input type=\"text\" className=\"class_time\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>3교시</td>\r\n            <td>\r\n              <input type=\"text\" className=\"class_time\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>4교시</td>\r\n            <td>\r\n              <input type=\"text\" className=\"class_time\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>5교시</td>\r\n            <td>\r\n              <input type=\"text\" className=\"class_time\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>6교시</td>\r\n            <td>\r\n              <input type=\"text\" className=\"class_time\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>7교시</td>\r\n            <td>\r\n              <input type=\"text\" className=\"class_time\" />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTimeTable;\r\n","export default __webpack_public_path__ + \"static/media/rolling.fbb4e958.gif\";","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return \"404\";\r\n};\r\n\r\nexport default NotFound;\r\n","import { authService } from \"fbase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj }) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    console.log(authService.currentUser);\r\n    if (!authService.currentUser) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const onLogOutClick = async () => {\r\n    await authService.signOut().then(history.push(\"/\"));\r\n  };\r\n  return <button onClick={onLogOutClick}>로그아웃</button>;\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"styles/Navigation.css\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <div className=\"nav_bar\">\r\n      <div className=\"nav_icon\">\r\n        <Link to=\"/\">Home</Link>\r\n      </div>\r\n      <div className=\"nav_icon\">\r\n        <Link to=\"/profile\">My Profile</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport CreateTimeTable from \"routes/CreateTimeTable\";\r\nimport Home from \"routes/Home\";\r\nimport NotFound from \"routes/NotFound\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn ? <Navigation userObj={userObj} /> : \"\"}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <Route exact path=\"/\">\r\n            <Home userObj={userObj} />\r\n          </Route>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n        <Route exact path=\"/profile\">\r\n          <Profile userObj={userObj} />\r\n        </Route>\r\n        <Route exact path=\"/createTimeTable\">\r\n          <CreateTimeTable userObj={userObj} />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService, dbService } from \"fbase\";\nimport \"styles/App.css\";\nimport rolling from \"rolling.gif\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        let userData;\n        const userRef = dbService.collection(\"teacher\").doc(user.uid);\n        await userRef\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              userData = doc.data();\n              console.log(userData);\n              if (userData.role === \"담임선생님\") {\n                setUserObj({\n                  uid: user.uid,\n                  displayName: user.displayName,\n                  emailVerified: user.emailVerified,\n                  role: userData.role,\n                  classNo: userData.grade + userData.classNo,\n                  updateProfile: (args) => user.updateProfile(args),\n                });\n              } else {\n                setUserObj({\n                  uid: user.uid,\n                  displayName: user.displayName,\n                  emailVerified: user.emailVerified,\n                  role: userData.role,\n                  classNo: \"\",\n                  updateProfile: (args) => user.updateProfile(args),\n                });\n              }\n            }\n          })\n          .catch((error) => {\n            console.log(\"Error getting document:\", error);\n          });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        <div className=\"loading_div\">\n          <img src={rolling} className=\"loading\" width=\"50px\" />\n          <br />\n          <p>잠시만 기다려주세요...</p>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}